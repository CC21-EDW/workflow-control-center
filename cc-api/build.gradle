plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'

    // to generate openapi.yml at build time
    id "com.github.johnrengelman.processes" version "0.5.0"
    id "org.springdoc.openapi-gradle-plugin" version "1.3.3"

    // sonar and test coverage
    id 'org.sonarqube' version '3.3'
    id 'jacoco'
}

group = 'com.baloise.open'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

openApi {
    apiDocsUrl.set("http://localhost:8080/v3/api-docs")
    outputDir.set(file("../build/"))
    outputFileName.set("openapi.yml")
    waitTimeInSeconds.set(10)
}

jacocoTestReport {
    reports {
        xml.enabled(true)
        html.enabled(true)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springdoc:springdoc-openapi-ui:1.5.12'

    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
    finalizedBy(jacocoTestReport)
}

compileJava {
    finalizedBy('generateOpenApiDocs')
}
